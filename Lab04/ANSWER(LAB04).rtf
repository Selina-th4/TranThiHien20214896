{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red231\green231\blue237;\red39\green40\blue50;}
{\*\expandedcolortbl;;\cssrgb\c92549\c92549\c94510;\cssrgb\c20392\c20784\c25490;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
Question: Alternatively, to compare items in the cart, instead of using Comparator, we can use the Comparable interface and override the compareTo()method. You can refer to the Java docs to see the information of this interface. \
Suppose we are taking this Comparable interface approach.\
-	What class should implement the Comparable interface?\
-	In those classes, how should you implement the compareTo()method be to reflect the ordering that we want?\
-	Can we have two ordering rules of the item (by title then cost and by cost then title) if we use this Comparable interface approach?\
-	Suppose the DVDs has a different ordering rule from the other media types, that is by title, then decreasing length, then cost. How would you modify your code to allow this?
\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
 answers \
\
1. The class that should implement the Comparable interface is the class representing the items in the cart. In this case, it would be the `Media` class or any subclass of `Media`.\
\
2. To reflect the desired ordering, you would implement the `compareTo()` method in the class that implements the Comparable interface. In this method, you would specify the comparison logic based on the ordering criteria. For example, if you want to order items by title and then by cost, you would compare the titles first and if they are the same, compare the costs. The `compareTo()` method should return a negative integer if the current object is less than the other object, zero if they are equal, and a positive integer if the current object is greater.\
\
3. No, with the Comparable interface approach, you can only have one natural ordering rule for the items. In this case, you can choose either to order the items by title and then by cost or by cost and then by title. You cannot have both ordering rules simultaneously using the Comparable interface.\
\
4. If the DVDs have a different ordering rule, you would need to create a separate class for DVDs that implements the Comparable interface and override the `compareTo()` method accordingly. In this new implementation, you would compare the titles first, then the lengths in decreasing order, and finally the costs. This way, you can have a different ordering rule for DVDs while still maintaining the original ordering rule for other media types.\
\
Note: Remember to update your code accordingly by implementing the Comparable interface and modifying the compareTo() method in the appropriate class or classes.}